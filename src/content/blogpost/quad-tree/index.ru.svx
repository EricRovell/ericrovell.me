---
cover: "/img/cover-quad-tree.png"
created: 2023-01-17T15:19:00.000Z
description: "Познакомимся со структурой данных, являющейся примером пространственной базой данных."
draft: true
keywords: [ "data structure", "javascript" ]
lang: ru
layout: blogpost
slug: "дерево-квадрантов"
title: "Дерево квадрантов"
---

<script>
	import * as Interactive from "./interactive"
</script>

Дерево квадрантов — древовидная структура данных, имеющая по 4 потомка на каждый внутренний узел. Данная структура данных представляет собой репрезентацию двухмерного пространства. Чаще всего находит применение в компьютерной графике для обозначения связи между объектами на плоскости. Форма данных, хранящихся на крайних узлах, определяется непосредственно приложением и представляют собой «единицу пространственной информации».

Если бинарное дерево разбирвает одномерное пространство на два сегмента, то дерево квадрантов разбивает плоскость на четыре квадранта.

## Практичность

Рассмотрим практичность дерева квадрантов на простом примере. Пусть в некоторой ограниченной плоскости имеются `N` движущихся объектов, расположенных произвольным образом. Задача состоит в определении столкновения объектов в некоторый момент времени.

Для решения задачи необходимо рассчитать расстояние от каждого объекта до всех остальных. Другими словами, алгоритмическая сложность будет квадратичной: `O(n^2)`, ведь если вокруг 1000 объектов, то необходимо проверить расстояние целых 1000 000 раз.

Дерево квадрантов позволяет снизить алгоритмическую сложность до `O(n log n)` - логарифмической. Для тысячи объектов количество необходимых операций снижается до *трёх тысяч*. С миллиона до трёх тысяч. Серьёзное увеличение производительности, ведь создание дерева само по себе - задача, требующая ресурсов.

## Структура

Как уже было отмечено выше, каждый узел дерева имеет по 4 потомка: квадранты, аналогичные четвертям на декартовой системе координат. При необходимости квадранты рекурсивно разбиваются на очередные 4 квадранта, заполняя собой плоскость:

<Interactive.QuadTreeDepth />

<Interactive.QuadTreeViz />

<Interactive.QuadTreeQuery />